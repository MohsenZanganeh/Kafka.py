version: "3"

volumes:
  minio-data:
  mongo-data:

services:
    zookeeper:
      container_name: zookeeper
      image: confluentinc/cp-zookeeper:5.2.5
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
       - "2181:2181"
      volumes:
        - ./data/zookeeper/data:/data
        - ./data/zookeeper/datalog:/datalog
    kafka:
      image: confluentinc/cp-kafka:5.2.5
      container_name: kafka
      ports:
        - 9092:9092
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      volumes:
         - ./data/kafka1/data:/var/lib/kafka/data
      depends_on:
        - zookeeper
    kafdrop:
      image: obsidiandynamics/kafdrop
      container_name: kafdrop
      restart: "no"
      ports:
        - "9003:9000"
      environment:
        KAFKA_BROKERCONNECT: "kafka:29092"
      depends_on:
        - kafka
    web:
        container_name: web
        build:
          context: ./web
          dockerfile: Dockerfile
        command: [
         "sh",
         "-c",
         "python app.py"]
        volumes:
          - ./web/:/app
        ports:
          - "5003:5000"
        env_file:
          - .env
    consumer:
        container_name: consumer
        restart: always
        build:
          context: ./consumer
          dockerfile: Dockerfile
        command: [
         "sh",
         "-c",
         "python app.py"]
        volumes:
          - ./consumer/app:/app
        env_file:
          - .env